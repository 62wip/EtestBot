from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, KeyboardButton, InlineKeyboardButton

text_for_set_status = ['–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å', '–£—á–µ–Ω–∏–∫']
set_status_kb = [
    [KeyboardButton(text='–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'),
     KeyboardButton(text='–£—á–µ–Ω–∏–∫')]
]
set_status = ReplyKeyboardMarkup(
    keyboard=set_status_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–ö—Ç–æ –≤—ã? üßê'
)

cancel_kb = [
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
]
cancel_for_feedback = ReplyKeyboardMarkup(
    keyboard=cancel_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã ‚ùå'
)
cancel_for_create_test = ReplyKeyboardMarkup(
    keyboard=cancel_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞ ‚ùå' 
)

text_for_edit_my_profile_for_student = ['–§–ò–û', '–°—Ç–∞—Ç—É—Å', '–ì—Ä—É–ø–ø–∞']
edit_my_profile_for_student_kb = [
    [KeyboardButton(text='–§–ò–û')],
    [KeyboardButton(text='–°—Ç–∞—Ç—É—Å')],
    [KeyboardButton(text='–ì—Ä—É–ø–ø–∞')]
]
edit_my_profile_for_student = ReplyKeyboardMarkup(
    keyboard=edit_my_profile_for_student_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? üßê'
)

text_for_edit_my_profile_for_teacher = ['–§–ò–û', '–°—Ç–∞—Ç—É—Å']
edit_my_profile_for_teacher_kb = [
    [KeyboardButton(text='–§–ò–û')],
    [KeyboardButton(text='–°—Ç–∞—Ç—É—Å')]
]
edit_my_profile_for_teacher = ReplyKeyboardMarkup(
    keyboard=edit_my_profile_for_teacher_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? üßê'
)

set_question_for_test_kb = [
    [KeyboardButton(text='–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä')],
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')],
]
set_question_for_test = ReplyKeyboardMarkup(
    keyboard=set_question_for_test_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ üìú'
)
text_for_choice_for_test_preview = ['–û—Ç–º–µ–Ω–∞', '–£–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å', '–î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å', '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–µ—Å—Ç']
choice_for_test_preview_kb = [
    [KeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–µ—Å—Ç')],
    [KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å'),
     KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å')],
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
]
choice_for_test_preview = ReplyKeyboardMarkup(
    keyboard=choice_for_test_preview_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ üìú'
)

text_for_choosing_visible_result = ['–î–∞', '–ù–µ—Ç', '–û—Ç–º–µ–Ω–∞']
choosing_visible_result_kb = [
    [KeyboardButton(text='–î–∞'),
     KeyboardButton(text='–ù–µ—Ç')],
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
]
choosing_visible_result = ReplyKeyboardMarkup(
    keyboard=choosing_visible_result_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ üìú'
)

text_for_start_solve_test = ['–ù–∞—á–∞—Ç—å —Ä–µ—à–∞—Ç—å', '–û—Ç–º–µ–Ω–∞']
start_solve_test_kb = [
    [KeyboardButton(text='–ù–∞—á–∞—Ç—å —Ä–µ—à–∞—Ç—å')],
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
]
start_solve_test = ReplyKeyboardMarkup(
    keyboard=start_solve_test_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ üìú'
)

async def markup_for_answers(answers: list) -> ReplyKeyboardMarkup:
    answers_kb = []
    for i in range(len(answers)):
        answers_kb.append([KeyboardButton(text=f'{i + 1}) {answers[i]}')])
    result_answers = ReplyKeyboardMarkup(
    keyboard=answers_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–µ—Ç–µ –æ—Ç–≤–µ—Ç üí•'
    )
    return result_answers

text_for_choice_for_result_preview = ['–û—Ç–º–µ–Ω–∞', '–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç', '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç']
choice_for_result_preview_kb = [
    [KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç'),
     KeyboardButton(text='–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç')],
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
]
choice_for_result_preview = ReplyKeyboardMarkup(
    keyboard=choice_for_result_preview_kb,
    resize_keyboard=True,
    one_time_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ üìú'
    )

show_more_result_kb = [
    [InlineKeyboardButton(text='–ü–æ–¥—Ä–æ–±–Ω–µ–µ üîé', callback_data='show_more_test_result')]
]
show_more_result = InlineKeyboardMarkup(
    inline_keyboard=show_more_result_kb
)

async def markup_for_choice_for_now_test(visible_result: bool, bool_test_result: False or list):
    choice_for_now_test_kb = [
    [InlineKeyboardButton(text='–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ—Å—Ç–∞ üì¢', callback_data='preview_for_now_test')]
]
    if visible_result:
        choice_for_now_test_kb.append([InlineKeyboardButton(text='–°–∫—Ä—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', callback_data='make_invisible_result_for_now_test')])
    else:
        choice_for_now_test_kb.append([InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', callback_data='make_visible_result_for_now_test')])
    if bool_test_result is False:
        choice_for_now_test_kb.append([InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç', callback_data='delete_now_test')])
    choice_for_now_test = InlineKeyboardMarkup(
        inline_keyboard=choice_for_now_test_kb
    )
    return choice_for_now_test

back_for_now_test_kb = [
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_for_now_test')]
    
]
back_for_now_test = InlineKeyboardMarkup(
    inline_keyboard=back_for_now_test_kb
)

choice_for_delete_now_test_kb = [
    [InlineKeyboardButton(text='–î–∞', callback_data='confirmed_delete_now_test'),
     InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='back_from_delete_now_test')]
]
choice_for_delete_now_test = InlineKeyboardMarkup(
    inline_keyboard=choice_for_delete_now_test_kb
)


show_more_for_now_test_result_kb = [
    [InlineKeyboardButton(text='–°–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data='show_more_for_now_test_result')]
]
show_more_for_now_test_result = InlineKeyboardMarkup(
    inline_keyboard=show_more_for_now_test_result_kb
)